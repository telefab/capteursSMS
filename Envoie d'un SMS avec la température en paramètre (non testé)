// Modifier Buffer Arduino :  dans un terminal entrer la commande :  sudo gedit /usr/share/arduino/libraries/SoftwareSerial/SoftwareSerial.h
//                            puis touche "ENTREE"
//                            modifier la valeur de MAX_RX_BUFF à 256
//                            q:q! pour quitter et enregistrer

#include <SoftwareSerial.h>

SoftwareSerial GPRS(7,8);                // GPRS : relatif au module GSM ; Serial : relatif à l'ordinateur
int ledGSM = 13;
int onModulePin = 9;                    // the pin to switch on the module (without press on button) 
String phone_number="+33647877083";     // ********* is the number to call
boolean messageEnvoye = false;


void switchGSMModule()
{
  digitalWrite(onModulePin,HIGH);
  delay(2100);
  digitalWrite(onModulePin,LOW);
}


void setup()
{
  Serial.begin(19200);                // UART baud rate
  GPRS.begin(19200);
  delay(100);
  pinMode(ledGSM, OUTPUT);
  pinMode(onModulePin, OUTPUT);
}


boolean envoyerUnMessage(float temp, boolean intervalle)      // "intervalle" sert a différencier si est rentré ou sorti de l'intervalle de température
{
  switchGSMModule();                              // switches the GSM module ON
  delay(500);
  GPRS.print("AT+CPIN=\"0000\"\r\n");           // Entrer le code PIN
  Serial.print("AT+CPIN=\"0000\"\r\n");        // Affichage réponse sur ordinateur 
  while (!GPRS.available());
  while (GPRS.available())
  {
    Serial.write(GPRS.read());
  }
  delay(20000);                               // Attente de l'établissement du réseau
  while (!GPRS.available());
  while (GPRS.available()) 
  {
    Serial.write(GPRS.read());
  }
  
  GPRS.print("AT+CMGF=1\r\n");                 // sets the SMS mode to text
  while (!GPRS.available());
  while (GPRS.available()) 
  {
    Serial.write(GPRS.read());
  }
  delay(1600);

  GPRS.print("AT+CMGS=\"");                     // send the SMS number
  GPRS.print(phone_number);
  GPRS.print("\"\r\n");
  while(GPRS.read()!='>');  

  if (!intervalle)                             // SMS body, deux possibilités
  {               
    GPRS.print("Attention, le seuil critique de temperature ");
    GPRS.print("dans le capteur 1 a ete atteint. La temperature");
    GPRS.print(" est de ");
  } 
  else 
  {
    GPRS.print("La temperature est de nouveau acceptable. Elle est de ");
  }
  GPRS.print(temp, 2);
  GPRS.print(" degres celsius.");           // Fin SMS body

  delay(500);
  GPRS.write(0x1A);                         // Sends ++
  GPRS.write(0x0D);
  GPRS.write(0x0A);
  while (!GPRS.available());
  while (GPRS.available()) 
  {
    Serial.write(GPRS.read());
  }
  
  delay(20000);
  while (!GPRS.available());
  while (GPRS.available()) 
  {
    Serial.write(GPRS.read());
  }
  switchGSMModule();                      // Switch OFF module GSM
  return true;
}


void loop()
{
  float temperature = 14.0;
  if (!messageEnvoye) 
  {
    if(envoyerUnMessage(temperature, false)){
    messageEnvoye = true;
    }
  }
}
